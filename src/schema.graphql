type User {
  id: ID!
  name: String!
  email: String!
  companyID: String!
}

type Users {
  count: Int!
  users: [User!]!
}

type Company {
  id: ID!
  name: String!
  users(take: Int, skip: Int): Users!
}

type Query {
  users: [User!]!
  user(id: String!): User
  company(id: String!): Company
}

input CreateUserInput {
  name: String!
  email: String!
  companyId: String!
}

input UpdateUserInput {
  id: ID!
  name: String
  email: String
}

input CompanyInput {
  name: String!
}

type Mutation {
  createUser(input: CreateUserInput!): User
  updateUser(input: UpdateUserInput!): User
  createCompany(input: CompanyInput): Company
}
